begin model

	begin molecule types

		# ligand -- epidermal growth factor
		EGF(EGFRRec)
		
		# core modules with available inhibitors 
		EGFR(egf,inhibitor,dimer,tyr~0~p)
		MEK(inhibitor,st~0~p)
		PI3K(inhibitor,active~0~p)
		PKC(inhibitor,s~0~p)	
		mTOR(inhibitor,active~0~p)

		# modules with no inhibitor
		STAT3(active~0~p)
		SMAD(active~0~p)

		# inhibitors
		IEGFR(EGFRRec)
		IMEK(MEKRec)
		IPI3K(PI3KRec)
		IPKC(PKCRec)
		IMTOR(mTORRec)

		# DPD values
		S_DPD_LB()
		S_DPD_NC()

	end molecule types


	begin parameters
		KD_egf = 1.77e10-7
		k_egf_f = k_egf_f__FREE
		k_egf_b = k_egf_f/KD_egf
		k_egf2_f = k_egf2_f__FREE
		k_egf2_b = k_egf2_f/KD_egf


		#dimerization kinetc parameters
		k_dim1 = k_dim1__FREE
		k_dim2 = k_dim2__FREE
		k_dim3 = k_dim3__FREE

		k_r_dim  = k_r_dim__FREE
		
		k_iegfr_f =  k_iegfr_f__FREE 
		k_iegfr_b = k_iegfr_b__FREE
		k_imek_f  = k_imek_f__FREE
		k_imek_b  = k_imek_b__FREE
		k_ipi3k_f = k_ipi3k_f__FREE
		k_ipi3k_b = k_ipi3k_b__FREE
		k_ipkc_f = k_ipkc_f__FREE
		k_ipkc_b = k_ipkc_b__FREE
		k_imtor_f = k_imtor_f__FREE
		k_imtor_b = k_imtor_b__FREE



		# phosphorylation/dephosphorylation Michaelis constants
		KM_egfr_phos = KM_egfr_phos__FREE
		KM_egfr_dephos = KM_egfr_dephos__FREE

		KM_mek_phos = KM_mek_phos__FREE
		KM_mek_dephos = KM_mek_dephos__FREE

		KM_pkc_phos = KM_pkc_phos__FREE 
		KM_pkc_dephos = KM_pkc_dephos__FREE

		KM_pi3k_phos = KM_pi3k_phos__FREE  
		KM_pi3k_dephos = KM_pi3k_dephos__FREE  

		KM_mtor_phos = KM_mtor_phos__FREE
		KM_mtor_dephos = KM_mtor_dephos__FREE

		KM_smad_phos = KM_smad_phos__FREE
		KM_smad_dephos = KM_smad_dephos__FREE

		KM_stat3_phos = KM_stat3_phos__FREE
		KM_stat3_dephos = KM_stat3_dephos__FREE


		vnEGFR = vnEGFR__FREE  
		vpEGFR = vpEGFR__FREE 

		vnMEK = vnMEK__FREE  
		vpMEK = vpMEK__FREE 

		vnPKC = vnPKC__FREE 
		vpPKC = vpPKC__FREE 
		
		vnPI3K = vnPI3K__FREE
		vpPI3K = vpPI3K__FREE

		vnSMAD = vnSMAD__FREE
		vpSMAD = vpSMAD__FREE

		vnSTAT3 = vnSTAT3__FREE
		vpSTAT3 = vpSTAT3__FREE

		vpmTOR = vpmTOR__FREE
		vnmTOR = vnmTOR__FREE


		# connection coefficients
		
		# influence of all proteins on EGFR
		PI3K_to_EGFR = PI3K_to_EGFR__FREE
		K_PI3K_EGFR = K_PI3K_EGFR__FREE
		mTOR_to_EGFR = mTOR_to_EGFR__FREE
		K_mTOR_EGFR = K_mTOR_EGFR__FREE
		MEK_to_EGFR = MEK_to_EGFR__FREE
		K_MEK_EGFR = K_MEK_EGFR__FREE
		PKC_to_EGFR = PKC_to_EGFR__FREE
		K_PKC_EGFR = K_PKC_EGFR__FREE
		SMAD_to_EGFR = SMAD_to_EGFR__FREE
		K_SMAD_EGFR = K_SMAD_EGFR__FREE


		# influence of all proteins on PI3K
		EGFR_to_PI3K = EGFR_to_PI3K__FREE
		K_EGFR_PI3K = K_EGFR_PI3K__FREE
		mTOR_to_PI3K = mTOR_to_PI3K__FREE
		K_mTOR_PI3K = K_mTOR_PI3K__FREE
		MEK_to_PI3K = MEK_to_PI3K__FREE
		K_MEK_PI3K = K_MEK_PI3K__FREE
		SMAD_to_PI3K = SMAD_to_PI3K__FREE
		K_SMAD_PI3K = K_SMAD_PI3K__FREE
		STAT3_to_PI3K = STAT3_to_PI3K__FREE
		K_STAT3_PI3K = K_STAT3_PI3K__FREE


		# influence of all proteins on mTOR
		PI3K_to_mTOR = PI3K_to_mTOR__FREE
		K_PI3K_mTOR = K_PI3K_mTOR__FREE
		PKC_to_mTOR = PKC_to_mTOR__FREE
		K_PKC_mTOR = K_PKC_mTOR__FREE
		MEK_to_mTOR = MEK_to_mTOR__FREE
		K_MEK_mTOR = K_MEK_mTOR__FREE


		# influence of all proteins on MEK
		EGFR_to_MEK = EGFR_to_MEK__FREE
		K_EGFR_MEK = K_EGFR_MEK__FREE
		PI3K_to_MEK = PI3K_to_MEK__FREE
		K_PI3K_MEK = K_PI3K_MEK__FREE
		mTOR_to_MEK = mTOR_to_MEK__FREE
		K_mTOR_MEK = K_mTOR_MEK__FREE
		SMAD_to_MEK = SMAD_to_MEK__FREE
		K_SMAD_MEK = K_SMAD_MEK__FREE
		STAT3_to_MEK = STAT3_to_MEK__FREE
		K_STAT3_MEK = K_STAT3_MEK__FREE

		
		# influence of all proteins on PK
		EGFR_to_PKC = EGFR_to_PKC__FREE
		K_EGFR_PKC = K_EGFR_PKC__FREE


		# influence of all proteins on STAT3
		EGFR_to_STAT3 = EGFR_to_STAT3__FREE
		K_EGFR_STAT3 = K_EGFR_STAT3__FREE



		# initial concentrations 
		EGF_conc = 1.667
		# inhibitors
		iEGFR_conc = 1.08e-6
		iMEK_conc = 1.7e-6
		iPKC_conc = 3.9e-6
		iPI3K_conc = 0.5e-6
		imTOR_conc = 0.01e-6
		

		# core module concentrations
		EGFR_conc = EGFR_conc__FREE
		MEK_conc = MEK_conc__FREE
		PKC_conc = PKC_conc__FREE
		PI3K_conc = PI3K_conc__FREE
		mTOR_conc = mTOR_conc__FREE
		SMAD_conc = SMAD_conc__FREE
		STAT3_conc = STAT3_conc__FREE
		
		# DPD trajectory variables
		# gradients for restoring force => f(S)
		m1_lb = m1_lb__FREE
		m2_lb = m2_lb__FREE
		m3_lb = m3_lb__FREE

		m1_nc = m1_nc__FREE
		m2_nc = m2_nc__FREE
		m3_nc = m3_nc__FREE

		# constants for f(S)
		lb_const = lb_const__FREE
		nc_const = nc_const__FREE

		# coefficient * ratio, rij*(x/s), for driving force
		b_lb_mek = b_lb_mek__FREE
		b_lb_pkc = b_lb_pkc__FREE
		b_lb_pi3k = b_lb_pi3k__FREE
		b_lb_mtor = b_lb_mtor__FREE
		b_lb_tgfb_smad = b_lb_tgfb_smad__FREE
		b_lb_stat3 = b_lb_stat3__FREE

		b_nc_mek = b_nc_mek__FREE
		b_nc_pkc = b_nc_pkc__FREE
		b_nc_pi3k = b_nc_pi3k__FREE
		b_nc_mtor = b_nc_mtor__FREE
		b_nc_tgfb_smad = b_nc_tgfb_smad__FREE
		b_nc_stat3 = b_nc_stat3__FREE


		# Stable steady states (luminal/basal)
		S_L = S_L__FREE
		S_B = S_B__FREE

		# Normal/Cancerous steady states
		S_N = S_N__FREE
		S_C = S_C__FREE
	end parameters


	begin seed species
	  EGF(EGFRRec) EGF_conc
	  EGFR(egf,inhibitor,dimer,tyr~0) EGFR_conc
	  IEGFR(EGFRRec) iEGFR_conc
	  MEK(inhibitor,st~0) MEK_conc
	  IMEK(MEKRec) iMEK_conc
	  PKC(inhibitor,s~0) PKC_conc
	  IPKC(PKCRec) iPKC_conc
	  PI3K(inhibitor,active~0) PI3K_conc
	  IPI3K(PI3KRec) iPI3K_conc
	  mTOR(inhibitor,active~0) mTOR_conc
	  IMTOR(mTORRec) imTOR_conc
	  SMAD(active~0) SMAD_conc
	  STAT3(active~0) STAT3_conc

	  S_DPD_LB() 0
	  S_DPD_NC() 0
	  

	end seed species
	


	begin observables

		# Epidermal Growth Factor Receptor
		Molecules nEGFR EGFR(tyr~0)
		Molecules pEGFR EGFR(tyr~p)
		# Molecules nEGFR_dimer EGFR(dimer!0, tyr~0).EGFR(dimer!0, tyr~0)
		# Molecules pEGFR_dimer EGFR(dimer!0, tyr~p).EGFR(dimer!0, tyr~p)
		# Molecules inhEGFR EGFR(inhibitor!0).EGF(EGFRRec!0)

		# active and inactive forms of core modules
		Molecules nPKC PKC(s~0)
		Molecules pPKC PKC(s~p)
		Molecules nMEK MEK(st~0)
		Molecules pMEK MEK(st~p)
		Molecules nPI3K PI3K(active~0)
		Molecules pPI3K PI3K(active~p)
		Molecules nmTOR mTOR(active~0)
		Molecules pmTOR mTOR(active~p)
		Molecules nSMAD SMAD(active~0)
		Molecules pSMAD SMAD(active~p)
		Molecules nSTAT3 STAT3(active~0)
		Molecules pSTAT3 STAT3(active~p)

		# inhibitor-bound species
		Species EGF_lig EGF(EGFRRec!0).EGFR(egf!0)
		Species i_EGFR IEGFR(EGFRRec!0).EGFR(inhibitor!0)
		Species i_MEK IMEK(MEKRec!0).MEK(inhibitor!0)
		Species i_PI3K IPI3K(PI3KRec!0).PI3K(inhibitor!0)
		Species i_PKC IPKC(PKCRec!0).PKC(inhibitor!0)
		Species i_mTOR IMTOR(mTORRec!0).mTOR(inhibitor!0)


		# DPD values
		Species S_LB S_DPD_LB()
		Species S_NC S_DPD_NC()

	end observables



	begin functions
		# hyperbolic multipliers indicate strength of connections between modules
		# 1 + Y_x_y * (Y_a / K_x_y)
		# --------
		# 1 + Y_a / K_x_y

		# active proteins influencing EGFR
		a_PI3K_to_EGFR() = ((1.0 + PI3K_to_EGFR * (pPI3K/K_PI3K_EGFR)) / (1.0 + pPI3K/K_PI3K_EGFR))
		a_mTOR_to_EGFR() = ((1.0 + mTOR_to_EGFR * (pmTOR/K_mTOR_EGFR)) / (1.0 + pmTOR/K_mTOR_EGFR))
		a_MEK_to_EGFR() = ((1.0 + MEK_to_EGFR * (pMEK/K_MEK_EGFR)) / (1.0 + pMEK/K_MEK_EGFR))
		a_PKC_to_EGFR() = ((1.0 + PKC_to_EGFR * (pPKC/K_PKC_EGFR)) / (1.0 + pPKC/K_PKC_EGFR))
		a_SMAD_to_EGFR() = ((1.0 + SMAD_to_EGFR * (pSMAD/K_SMAD_EGFR)) / (1.0 + pSMAD/K_SMAD_EGFR))


		a_EGFR_to_PI3K() = ((1.0 + EGFR_to_PI3K * (pEGFR/K_EGFR_PI3K)) / (1.0 + pEGFR/K_EGFR_PI3K))
		a_mTOR_to_PI3K() = ((1.0 + mTOR_to_PI3K * (pmTOR/K_mTOR_PI3K)) / (1.0 + pmTOR/K_mTOR_PI3K))
		a_MEK_to_PI3K() = ((1.0 + MEK_to_PI3K * (pMEK/K_MEK_PI3K)) / (1.0 + pMEK/K_MEK_PI3K))
		a_SMAD_to_PI3K() = ((1.0 + SMAD_to_PI3K * (pSMAD/K_SMAD_PI3K)) / (1.0 + pSMAD/K_SMAD_PI3K))
		a_STAT3_to_PI3K() = ((1.0 + STAT3_to_PI3K * (pSTAT3/K_STAT3_PI3K)) / (1.0 + pSTAT3/K_STAT3_PI3K))


		a_PI3K_to_mTOR() = ((1.0 + PI3K_to_mTOR * (pPI3K/K_PI3K_mTOR)) / (1.0 + pPI3K/K_PI3K_mTOR))
		a_PKC_to_mTOR() = ((1.0 + PKC_to_mTOR * (pPKC/K_PKC_mTOR)) / (1.0 + pPKC/K_PKC_mTOR))
		a_MEK_to_mTOR() = ((1.0 + MEK_to_mTOR * (pMEK/K_MEK_mTOR)) / (1.0 + pMEK/K_MEK_mTOR))

		a_EGFR_to_MEK() = ((1.0 + EGFR_to_MEK * (pEGFR/K_EGFR_MEK)) / (1.0 + pEGFR/K_EGFR_MEK))
		a_PI3K_to_MEK() = ((1.0 + PI3K_to_MEK * (pPI3K/K_PI3K_MEK)) / (1.0 + pPI3K/K_PI3K_MEK))
		a_mTOR_to_MEK() = ((1.0 + mTOR_to_MEK * (pmTOR/K_mTOR_MEK)) / (1.0 + pmTOR/K_mTOR_MEK))
		a_SMAD_to_MEK() = ((1.0 + SMAD_to_MEK * (pSMAD/K_SMAD_MEK)) / (1.0 + pSMAD/K_SMAD_MEK))
		a_STAT3_to_MEK() = ((1.0 + STAT3_to_MEK * (pSTAT3/K_STAT3_MEK)) / (1.0 + pSTAT3/K_STAT3_MEK))


		a_EGFR_to_PKC() = ((1.0 + EGFR_to_PKC * (pEGFR/K_EGFR_PKC)) / (1.0 + pEGFR/K_EGFR_PKC))


		a_EGFR_to_STAT3() = ((1.0 + EGFR_to_STAT3 * (pEGFR/K_EGFR_STAT3)) / (1.0 + pEGFR/K_EGFR_STAT3))

		
	
		# inhibitor factors
		inh_EGFR() = (1.0 / (1.0 + i_EGFR))
		inh_PI3K() = (1.0 / (1.0 + i_PI3K))
		inh_MEK() = (1.0 / (1.0 + i_MEK))
		inh_PKC() = (1.0 / (1.0 + i_PKC))
		inh_mTOR() = (1.0 / (1.0 + i_mTOR))
		

		# inactive and active initial kinetic rates (prior to hyperbolic multipliers)
		kr_nEGFR() = (vnEGFR / (pEGFR + KM_egfr_dephos))
		kr_pEGFR() = (vpEGFR / (nEGFR + KM_egfr_phos))
		
		kr_nMEK() = (vnMEK / (pMEK + KM_mek_dephos))
		kr_pMEK() = (vpMEK / (nMEK + KM_mek_phos))
		
		kr_nPKC() = (vnPKC / (pPKC + KM_pkc_dephos))
		kr_pPKC() = (vpPKC / (nPKC + KM_pkc_phos))

		kr_nPI3K() = (vnPI3K / (pPI3K + KM_pi3k_dephos))
		kr_pPI3K() = (vpPI3K / (nPI3K + KM_pi3k_phos))

		kr_pmTOR() = (vpmTOR / (nmTOR + KM_mtor_phos))
		kr_nmTOR() = (vnmTOR / (pmTOR + KM_mtor_dephos))

		kr_pSTAT3() = (vpSTAT3 / (nSTAT3 + KM_stat3_phos))
		kr_nSTAT3() = (vnSTAT3 / (pSTAT3 + KM_stat3_dephos))
		
		kr_pSMAD() = (vpSMAD / (nSMAD + KM_smad_phos))
		kr_nSMAD() = (vnSMAD / (pSMAD + KM_smad_dephos))


		# Driving force for LB DPD
		driving_force_lb() =  ((b_lb_mek * pMEK) + (b_lb_pkc * pPKC) + (b_lb_pi3k * pPI3K + b_lb_mtor * pmTOR) + (b_lb_stat3 * pSTAT3) + (b_lb_tgfb_smad * pSMAD))
		driving_force_canc() =  ((b_nc_mek * pMEK) + (b_nc_pkc * pPKC) + (b_nc_pi3k * pPI3K) + (b_nc_mtor * pmTOR) + (b_nc_stat3 * pSTAT3) + (b_nc_tgfb_smad * pSMAD))
		# Restoring force -- modelled using linear approx. of derivative of quartic potential (two stable states). 
		# I approx. by taking the distance between extrema and roots of cubic to be equal across the function. 
		# Hence we end up with three slopes, which can then be plugged into line formula to give linear approximations for the force.
		# The constant value I have added for mathematical formalism. We may not even need it for the approximation to work.
		# However, I am reluctant to remove it until I have finished the optimization.
		restoring_force_lb() = (\
		if(S_LB < ((3*S_L+S_B)/4.0),m1_lb * (S_LB-S_L), \
		if(S_LB > ((3*S_B+S_L)/4.0),m3_lb * (S_LB-S_B), \
		(m2_lb * S_LB))) \
		+lb_const)


		restoring_force_canc() = (\
		if(S_NC < ((3*S_N + S_C)/4.0), m1_nc*(S_NC - S_N), \
		if(S_NC > ((3*S_C + S_N)/4.0), m3_nc*(S_NC - S_C), \
		(m2_nc * S_NC))) \
		+ nc_const)		
	
	
		# BMRA connection strengths for prop file
		PI3K_EGFR_fn() = (PI3K_to_EGFR)
		mTOR_EGFR_fn() = (mTOR_to_EGFR)
		MEK_EGFR_fn() = (MEK_to_EGFR)
		PKC_EGFR_fn() = (PKC_to_EGFR)
		SMAD_EGFR_fn() = (SMAD_to_EGFR)

		EGFR_PI3K_fn() = (EGFR_to_PI3K)
		mTOR_PI3K_fn() = (mTOR_to_PI3K)
		MEK_PI3K_fn() = (MEK_to_PI3K)
		SMAD_PI3K_fn() = (SMAD_to_PI3K)
		STAT3_PI3K_fn() = (STAT3_to_PI3K)

		PI3K_mTOR_fn() = (PI3K_to_mTOR)
		PKC_mTOR_fn() = (PKC_to_mTOR)
		MEK_mTOR_fn() = (MEK_to_mTOR)

		EGFR_MEK_fn() = (EGFR_to_MEK)
		PI3K_MEK_fn() = (PI3K_to_MEK)
		mTOR_MEK_fn() = (mTOR_to_MEK)
		SMAD_MEK_fn() = (SMAD_to_MEK)
		STAT3_MEK_fn() = (STAT3_to_MEK)

		EGFR_PKC_fn() = (EGFR_to_PKC)
		EGFR_STAT3_fn() = (EGFR_to_STAT3)


		PI3K_DPD_NC() = (b_nc_pi3k)
		mTOR_DPD_NC() = (b_nc_mtor)
		MEK_DPD_NC() = (b_nc_mek)
		PKC_DPD_NC() = (b_nc_pkc)
		TGFb_SMAD_DPD_NC() = (b_nc_tgfb_smad)
		STAT3_DPD_NC() = (b_nc_stat3)
		PI3K_DPD_LB() = (b_lb_pi3k)
		mTOR_DPD_LB() = (b_lb_mtor)
		MEK_DPD_LB() = (b_lb_mek)
		PKC_DPD_LB() = (b_lb_pkc)
		TGFb_SMAD_DPD_LB() = (b_lb_tgfb_smad)
		STAT3_DPD_LB() = (b_lb_stat3)

	end functions


	begin reaction rules
		# EGFR modelling
		# EGFR binds to inhibitor
		# assume dissociation rate is constant regardless of ligand binding
		# coarse-grained EGFR model --> ligand binding initiates dimerization
		EGFR(egf) + EGF(EGFRRec) <-> EGFR(egf!0).EGF(EGFRRec!0) k_egf_f, k_egf_b
		# EGF can bind to EGFR in dimer 
		EGFR(egf,dimer!+) + EGF(EGFRRec) <-> EGFR(egf!0,dimer!+).EGF(EGFRRec!0) k_egf2_f, k_egf2_b

		# dimerization case 1 -> ligand 1 binds and causes dimerization
		EGFR(egf!+,dimer) + EGFR(egf,dimer) -> EGFR(egf!+,dimer!0).EGFR(egf,dimer!0) k_dim1
		# dimerization case 2 -> both ligands bind and cause dimerization
		EGFR(egf!+,dimer) + EGFR(egf!+,dimer) -> EGFR(egf!+,dimer!0).EGFR(egf!+,dimer!0) k_dim2
		# dimerization case 3 -> receptors dimerize without ligand binding
		EGFR(egf,dimer) + EGFR(egf,dimer) -> EGFR(egf,dimer!0).EGFR(egf,dimer!0) k_dim3
		# dimer dissociation
		EGFR(dimer!0).EGFR(dimer!0) -> EGFR(dimer) + EGFR(dimer) k_r_dim


		# activation through phosphorylation
		EGFR(dimer!+,tyr~0) -> EGFR(dimer!+,tyr~p) (a_PI3K_to_EGFR() * a_mTOR_to_EGFR() * a_MEK_to_EGFR() * a_PKC_to_EGFR() * a_SMAD_to_EGFR() * inh_EGFR() * kr_pEGFR() )
		EGFR(dimer,tyr~p) -> EGFR(dimer,tyr~0) ( kr_nEGFR() )

		#inhibition
		EGFR(inhibitor) + IEGFR(EGFRRec) <-> EGFR(inhibitor!0).IEGFR(EGFRRec!0) k_iegfr_f, k_iegfr_b		


		# MEK phos/dephos
		MEK(st~0) -> MEK(st~p) (a_EGFR_to_MEK() * a_PI3K_to_MEK() * a_mTOR_to_MEK() * a_SMAD_to_MEK() * a_STAT3_to_MEK() * inh_MEK() * kr_pMEK() )
		MEK(st~p) -> MEK(st~0) ( kr_nMEK() )
		# inhibition
		MEK(inhibitor) + IMEK(MEKRec) <-> MEK(inhibitor!0).IMEK(MEKRec!0) k_imek_f, k_imek_b

		# PKC phos/dephos
		PKC(s~0) -> PKC(s~p)  (a_EGFR_to_PKC() * inh_PKC() * kr_pPKC() )
		PKC(s~p) -> PKC(s~0)  ( kr_nPKC() )

		# inhibition
		PKC(inhibitor) + IPKC(PKCRec) <-> PKC(inhibitor!0).IPKC(PKCRec!0) k_ipkc_f, k_ipkc_b


		# PI3K
		# phosphorylation
		PI3K(active~0) -> PI3K(active~p) (a_EGFR_to_PI3K() * a_mTOR_to_PI3K() * a_MEK_to_PI3K() * a_SMAD_to_PI3K() * a_STAT3_to_PI3K() * inh_PI3K() * kr_pPI3K() )
		PI3K(active~p) -> PI3K(active~0) ( kr_nPI3K() )
		# inhibition
		PI3K(inhibitor) + IPI3K(PI3KRec) <-> PI3K(inhibitor!0).IPI3K(PI3KRec!0) k_ipi3k_f, k_ipi3k_b

		# mTOR
		# phosphorylation
		mTOR(active~0) -> mTOR(active~p) (a_PI3K_to_mTOR() * a_PKC_to_mTOR() * a_MEK_to_mTOR() * inh_mTOR() * kr_pmTOR() )
		mTOR(active~p) -> mTOR(active~0) ( kr_nmTOR() )

		# inhibition
		mTOR(inhibitor) + IMTOR(mTORRec) <-> mTOR(inhibitor!0).IMTOR(mTORRec!0) k_imtor_f, k_imtor_b

		# STAT3
		# phosphorylation
		STAT3(active~0) -> STAT3(active~p) ( a_EGFR_to_STAT3() * kr_pSTAT3() )
		STAT3(active~p) -> STAT3(active~0) ( kr_nSTAT3() )

		# SMAD
		# phosphorylation
		SMAD(active~0) -> SMAD(active~p) (kr_pSMAD() )
		SMAD(active~p) -> SMAD(active~0) ( kr_nSMAD() )


		# DPD species accumulates at a rate specified by driving_force+restoring_force.
		0 -> S_DPD_LB() (driving_force_lb()+restoring_force_lb()) 
		0 -> S_DPD_NC() (driving_force_canc()+restoring_force_canc())

	end reaction rules


	begin actions 
		# equilibrate model first according to Sekar et al -- time course data
		generate_network({overwrite=>1});
		setConcentration("EGF(EGFRRec)", 0);
		setConcentration("IEGFR(EGFRRec)", 0);
		setConcentration("IMEK(MEKRec)", 0);
		setConcentration("IPI3K(PI3KRec)", 0);
		setConcentration("IPKC(PKCRec)", 0);
		setConcentration("IMTOR(mTORRec)", 0);
		simulate({suffix=>"equilibriate", method=>"ode",t_end=>10000,n_steps=>10000, print_functions=>1});
		saveConcentrations()


		# PI3K inhibition -- cell line MCF10A
		setConcentration("EGF(EGFRRec)", "EGF_conc");
		setConcentration("IEGFR(EGFRRec)", 0);
		setConcentration("IMEK(MEKRec)", 0);
		setConcentration("IPI3K(PI3KRec)", "iPI3K_conc");
		setConcentration("IPKC(PKCRec)", 0);
		setConcentration("IMTOR(mTORRec)", 0);
		simulate({suffix=>"MCF10A_iPI3K", method=>"ode", t_end=>3600, n_steps=>3600, print_functions=>1});
	

		# EGFR inhibition -- cell line MCF10A
		resetConcentrations()
		setConcentration("EGF(EGFRRec)", "EGF_conc");
		setConcentration("IEGFR(EGFRRec)", "iEGFR_conc");
		setConcentration("IMEK(MEKRec)", 0);
		setConcentration("IPI3K(PI3KRec)", 0);
		setConcentration("IPKC(PKCRec)", 0);
		setConcentration("IMTOR(mTORRec)", 0);
	
		simulate({suffix=>"MCF10A_iEGFR", method=>"ode", t_end=>3600, n_steps=>3600, print_functions=>1});

		# MEK inhibition -- cell line MCF10A
		resetConcentrations()
		setConcentration("EGF(EGFRRec)", "EGF_conc");
		setConcentration("IEGFR(EGFRRec)", 0);
		setConcentration("IMEK(MEKRec)", "iMEK_conc");
		setConcentration("IPI3K(PI3KRec)", 0);
		setConcentration("IPKC(PKCRec)", 0);
		setConcentration("IMTOR(mTORRec)", 0);
		
		simulate({suffix=>"MCF10A_iMEK", method=>"ode", t_end=>3600, n_steps=>3600, print_functions=>1});

		# PKC inhibition -- cell line MCF10A
		resetConcentrations()
		setConcentration("EGF(EGFRRec)", "EGF_conc");
		setConcentration("IEGFR(EGFRRec)", 0);
		setConcentration("IMEK(MEKRec)", 0);
		setConcentration("IPI3K(PI3KRec)", 0);
		setConcentration("IPKC(PKCRec)", "iPKC_conc");
		setConcentration("IMTOR(mTORRec)", 0);
		
		simulate({suffix=>"MCF10A_iPKC", method=>"ode", t_end=>3600, n_steps=>3600, print_functions=>1});


		# mTOR inhibtion -- cell line MCF10A
		resetConcentrations()
		setConcentration("EGF(EGFRRec)", "EGF_conc");
		setConcentration("IEGFR(EGFRRec)", 0);
		setConcentration("IMEK(MEKRec)", 0);
		setConcentration("IPI3K(PI3KRec)", 0);
		setConcentration("IPKC(PKCRec)", 0);
		setConcentration("IMTOR(mTORRec)", "imTOR_conc");
		
		simulate({suffix=>"MCF10A_imTOR", method=>"ode", t_end=>3600, n_steps=>3600, print_functions=>1});



		# # fit to DPD time trajectory
		
		# # PI3K inhibition -- cell line MCF10A
		# resetConcentrations()
		# setConcentration("EGF(EGFRRec)", "EGF_conc");
		# setConcentration("IEGFR(EGFRRec)", 0);
		# setConcentration("IMEK(MEKRec)", 0);
		# setConcentration("IPI3K(PI3KRec)", "iPI3K_conc");
		# setConcentration("IPKC(PKCRec)", 0);
		# setConcentration("IMTOR(mTORRec)", 0);
		# setConcentration("S_DPD_LB()", "S_B");
		# setConcentration("S_DPD_NC()", "S_C");
		# simulate({suffix=>"DPD_trajectory_MCF10A_iPI3K", method=>"ode", t_end=>3600, n_steps=>360, print_functions=>1});


		# # EGFR inhibition -- cell line MCF10A
		# resetConcentrations()
		# setConcentration("EGF(EGFRRec)", "EGF_conc");
		# setConcentration("IEGFR(EGFRRec)", "iEGFR_conc");
		# setConcentration("IMEK(MEKRec)", 0);
		# setConcentration("IPI3K(PI3KRec)", 0);
		# setConcentration("IPKC(PKCRec)", 0);
		# setConcentration("IMTOR(mTORRec)", 0);
		# setConcentration("S_DPD_LB()", "S_B");
		# setConcentration("S_DPD_NC()", "S_C");
		# simulate({suffix=>"DPD_trajectory_MCF10A_iEGFR", method=>"ode", t_end=>3600, n_steps=>360, print_functions=>1});

		# # MEK inhibition -- cell line MCF10A
		# resetConcentrations()
		# setConcentration("EGF(EGFRRec)", "EGF_conc");
		# setConcentration("IEGFR(EGFRRec)", 0);
		# setConcentration("IMEK(MEKRec)", "iMEK_conc");
		# setConcentration("IPI3K(PI3KRec)", 0);
		# setConcentration("IPKC(PKCRec)", 0);
		# setConcentration("IMTOR(mTORRec)", 0);
		# setConcentration("S_DPD_LB()", "S_B");
		# setConcentration("S_DPD_NC()", "S_C");
		# simulate({suffix=>"DPD_trajectory_MCF10A_iMEK", method=>"ode", t_end=>3600, n_steps=>360, print_functions=>1});


		# # PKC inhibition -- cell line MCF10A
		# resetConcentrations()
		# setConcentration("EGF(EGFRRec)", "EGF_conc");
		# setConcentration("IEGFR(EGFRRec)", 0);
		# setConcentration("IMEK(MEKRec)", 0);
		# setConcentration("IPI3K(PI3KRec)", 0);
		# setConcentration("IPKC(PKCRec)", "iPKC_conc");
		# setConcentration("IMTOR(mTORRec)", 0);
		# setConcentration("S_DPD_LB()", "S_B");
		# setConcentration("S_DPD_NC()", "S_C");
		# simulate({suffix=>"DPD_trajectory_MCF10A_iPKC", method=>"ode", t_end=>3600, n_steps=>360, print_functions=>1});

		# # mTOR inhibtion -- cell line MCF10A
		# resetConcentrations()
		# setConcentration("EGF(EGFRRec)", "EGF_conc");
		# setConcentration("IEGFR(EGFRRec)", 0);
		# setConcentration("IMEK(MEKRec)", 0);
		# setConcentration("IPI3K(PI3KRec)", 0);
		# setConcentration("IPKC(PKCRec)", 0);
		# setConcentration("IMTOR(mTORRec)", "imTOR_conc");
		# setConcentration("S_DPD_LB()", "S_B");
		# setConcentration("S_DPD_NC()", "S_C");
		# simulate({suffix=>"DPD_trajectory_MCF10A_imTOR", method=>"ode", t_end=>3600, n_steps=>360, print_functions=>1});
	end actions

end model
